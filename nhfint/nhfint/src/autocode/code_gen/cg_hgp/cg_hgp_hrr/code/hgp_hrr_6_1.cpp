#include "hgp/hgp_hrr.hpp"
#include <vector>

namespace nhfInt {
namespace hgp {

void hgp_hrr_6_1_(std::vector<double> &a6b1, const std::vector<double> &hrrInp, double x, double y, double z)
{
    const double *a6b0 = hrrInp.data() +  0;
    const double *a7b0 = hrrInp.data() + 28;


    a6b1[ 0] = a7b0[ 0] + x * a6b0[ 0];    //[(600)(100)] = [(700)(000)] + ABx * [(600)(000)]
    a6b1[ 1] = a7b0[ 1] + y * a6b0[ 0];    //[(600)(010)] = [(610)(000)] + ABy * [(600)(000)]
    a6b1[ 2] = a7b0[ 2] + z * a6b0[ 0];    //[(600)(001)] = [(601)(000)] + ABz * [(600)(000)]
    a6b1[ 3] = a7b0[ 1] + x * a6b0[ 1];    //[(510)(100)] = [(610)(000)] + ABx * [(510)(000)]
    a6b1[ 4] = a7b0[ 3] + y * a6b0[ 1];    //[(510)(010)] = [(520)(000)] + ABy * [(510)(000)]
    a6b1[ 5] = a7b0[ 4] + z * a6b0[ 1];    //[(510)(001)] = [(511)(000)] + ABz * [(510)(000)]
    a6b1[ 6] = a7b0[ 2] + x * a6b0[ 2];    //[(501)(100)] = [(601)(000)] + ABx * [(501)(000)]
    a6b1[ 7] = a7b0[ 4] + y * a6b0[ 2];    //[(501)(010)] = [(511)(000)] + ABy * [(501)(000)]
    a6b1[ 8] = a7b0[ 5] + z * a6b0[ 2];    //[(501)(001)] = [(502)(000)] + ABz * [(501)(000)]
    a6b1[ 9] = a7b0[ 3] + x * a6b0[ 3];    //[(420)(100)] = [(520)(000)] + ABx * [(420)(000)]
    a6b1[10] = a7b0[ 6] + y * a6b0[ 3];    //[(420)(010)] = [(430)(000)] + ABy * [(420)(000)]
    a6b1[11] = a7b0[ 7] + z * a6b0[ 3];    //[(420)(001)] = [(421)(000)] + ABz * [(420)(000)]
    a6b1[12] = a7b0[ 4] + x * a6b0[ 4];    //[(411)(100)] = [(511)(000)] + ABx * [(411)(000)]
    a6b1[13] = a7b0[ 7] + y * a6b0[ 4];    //[(411)(010)] = [(421)(000)] + ABy * [(411)(000)]
    a6b1[14] = a7b0[ 8] + z * a6b0[ 4];    //[(411)(001)] = [(412)(000)] + ABz * [(411)(000)]
    a6b1[15] = a7b0[ 5] + x * a6b0[ 5];    //[(402)(100)] = [(502)(000)] + ABx * [(402)(000)]
    a6b1[16] = a7b0[ 8] + y * a6b0[ 5];    //[(402)(010)] = [(412)(000)] + ABy * [(402)(000)]
    a6b1[17] = a7b0[ 9] + z * a6b0[ 5];    //[(402)(001)] = [(403)(000)] + ABz * [(402)(000)]
    a6b1[18] = a7b0[ 6] + x * a6b0[ 6];    //[(330)(100)] = [(430)(000)] + ABx * [(330)(000)]
    a6b1[19] = a7b0[10] + y * a6b0[ 6];    //[(330)(010)] = [(340)(000)] + ABy * [(330)(000)]
    a6b1[20] = a7b0[11] + z * a6b0[ 6];    //[(330)(001)] = [(331)(000)] + ABz * [(330)(000)]
    a6b1[21] = a7b0[ 7] + x * a6b0[ 7];    //[(321)(100)] = [(421)(000)] + ABx * [(321)(000)]
    a6b1[22] = a7b0[11] + y * a6b0[ 7];    //[(321)(010)] = [(331)(000)] + ABy * [(321)(000)]
    a6b1[23] = a7b0[12] + z * a6b0[ 7];    //[(321)(001)] = [(322)(000)] + ABz * [(321)(000)]
    a6b1[24] = a7b0[ 8] + x * a6b0[ 8];    //[(312)(100)] = [(412)(000)] + ABx * [(312)(000)]
    a6b1[25] = a7b0[12] + y * a6b0[ 8];    //[(312)(010)] = [(322)(000)] + ABy * [(312)(000)]
    a6b1[26] = a7b0[13] + z * a6b0[ 8];    //[(312)(001)] = [(313)(000)] + ABz * [(312)(000)]
    a6b1[27] = a7b0[ 9] + x * a6b0[ 9];    //[(303)(100)] = [(403)(000)] + ABx * [(303)(000)]
    a6b1[28] = a7b0[13] + y * a6b0[ 9];    //[(303)(010)] = [(313)(000)] + ABy * [(303)(000)]
    a6b1[29] = a7b0[14] + z * a6b0[ 9];    //[(303)(001)] = [(304)(000)] + ABz * [(303)(000)]
    a6b1[30] = a7b0[10] + x * a6b0[10];    //[(240)(100)] = [(340)(000)] + ABx * [(240)(000)]
    a6b1[31] = a7b0[15] + y * a6b0[10];    //[(240)(010)] = [(250)(000)] + ABy * [(240)(000)]
    a6b1[32] = a7b0[16] + z * a6b0[10];    //[(240)(001)] = [(241)(000)] + ABz * [(240)(000)]
    a6b1[33] = a7b0[11] + x * a6b0[11];    //[(231)(100)] = [(331)(000)] + ABx * [(231)(000)]
    a6b1[34] = a7b0[16] + y * a6b0[11];    //[(231)(010)] = [(241)(000)] + ABy * [(231)(000)]
    a6b1[35] = a7b0[17] + z * a6b0[11];    //[(231)(001)] = [(232)(000)] + ABz * [(231)(000)]
    a6b1[36] = a7b0[12] + x * a6b0[12];    //[(222)(100)] = [(322)(000)] + ABx * [(222)(000)]
    a6b1[37] = a7b0[17] + y * a6b0[12];    //[(222)(010)] = [(232)(000)] + ABy * [(222)(000)]
    a6b1[38] = a7b0[18] + z * a6b0[12];    //[(222)(001)] = [(223)(000)] + ABz * [(222)(000)]
    a6b1[39] = a7b0[13] + x * a6b0[13];    //[(213)(100)] = [(313)(000)] + ABx * [(213)(000)]
    a6b1[40] = a7b0[18] + y * a6b0[13];    //[(213)(010)] = [(223)(000)] + ABy * [(213)(000)]
    a6b1[41] = a7b0[19] + z * a6b0[13];    //[(213)(001)] = [(214)(000)] + ABz * [(213)(000)]
    a6b1[42] = a7b0[14] + x * a6b0[14];    //[(204)(100)] = [(304)(000)] + ABx * [(204)(000)]
    a6b1[43] = a7b0[19] + y * a6b0[14];    //[(204)(010)] = [(214)(000)] + ABy * [(204)(000)]
    a6b1[44] = a7b0[20] + z * a6b0[14];    //[(204)(001)] = [(205)(000)] + ABz * [(204)(000)]
    a6b1[45] = a7b0[15] + x * a6b0[15];    //[(150)(100)] = [(250)(000)] + ABx * [(150)(000)]
    a6b1[46] = a7b0[21] + y * a6b0[15];    //[(150)(010)] = [(160)(000)] + ABy * [(150)(000)]
    a6b1[47] = a7b0[22] + z * a6b0[15];    //[(150)(001)] = [(151)(000)] + ABz * [(150)(000)]
    a6b1[48] = a7b0[16] + x * a6b0[16];    //[(141)(100)] = [(241)(000)] + ABx * [(141)(000)]
    a6b1[49] = a7b0[22] + y * a6b0[16];    //[(141)(010)] = [(151)(000)] + ABy * [(141)(000)]
    a6b1[50] = a7b0[23] + z * a6b0[16];    //[(141)(001)] = [(142)(000)] + ABz * [(141)(000)]
    a6b1[51] = a7b0[17] + x * a6b0[17];    //[(132)(100)] = [(232)(000)] + ABx * [(132)(000)]
    a6b1[52] = a7b0[23] + y * a6b0[17];    //[(132)(010)] = [(142)(000)] + ABy * [(132)(000)]
    a6b1[53] = a7b0[24] + z * a6b0[17];    //[(132)(001)] = [(133)(000)] + ABz * [(132)(000)]
    a6b1[54] = a7b0[18] + x * a6b0[18];    //[(123)(100)] = [(223)(000)] + ABx * [(123)(000)]
    a6b1[55] = a7b0[24] + y * a6b0[18];    //[(123)(010)] = [(133)(000)] + ABy * [(123)(000)]
    a6b1[56] = a7b0[25] + z * a6b0[18];    //[(123)(001)] = [(124)(000)] + ABz * [(123)(000)]
    a6b1[57] = a7b0[19] + x * a6b0[19];    //[(114)(100)] = [(214)(000)] + ABx * [(114)(000)]
    a6b1[58] = a7b0[25] + y * a6b0[19];    //[(114)(010)] = [(124)(000)] + ABy * [(114)(000)]
    a6b1[59] = a7b0[26] + z * a6b0[19];    //[(114)(001)] = [(115)(000)] + ABz * [(114)(000)]
    a6b1[60] = a7b0[20] + x * a6b0[20];    //[(105)(100)] = [(205)(000)] + ABx * [(105)(000)]
    a6b1[61] = a7b0[26] + y * a6b0[20];    //[(105)(010)] = [(115)(000)] + ABy * [(105)(000)]
    a6b1[62] = a7b0[27] + z * a6b0[20];    //[(105)(001)] = [(106)(000)] + ABz * [(105)(000)]
    a6b1[63] = a7b0[21] + x * a6b0[21];    //[(060)(100)] = [(160)(000)] + ABx * [(060)(000)]
    a6b1[64] = a7b0[28] + y * a6b0[21];    //[(060)(010)] = [(070)(000)] + ABy * [(060)(000)]
    a6b1[65] = a7b0[29] + z * a6b0[21];    //[(060)(001)] = [(061)(000)] + ABz * [(060)(000)]
    a6b1[66] = a7b0[22] + x * a6b0[22];    //[(051)(100)] = [(151)(000)] + ABx * [(051)(000)]
    a6b1[67] = a7b0[29] + y * a6b0[22];    //[(051)(010)] = [(061)(000)] + ABy * [(051)(000)]
    a6b1[68] = a7b0[30] + z * a6b0[22];    //[(051)(001)] = [(052)(000)] + ABz * [(051)(000)]
    a6b1[69] = a7b0[23] + x * a6b0[23];    //[(042)(100)] = [(142)(000)] + ABx * [(042)(000)]
    a6b1[70] = a7b0[30] + y * a6b0[23];    //[(042)(010)] = [(052)(000)] + ABy * [(042)(000)]
    a6b1[71] = a7b0[31] + z * a6b0[23];    //[(042)(001)] = [(043)(000)] + ABz * [(042)(000)]
    a6b1[72] = a7b0[24] + x * a6b0[24];    //[(033)(100)] = [(133)(000)] + ABx * [(033)(000)]
    a6b1[73] = a7b0[31] + y * a6b0[24];    //[(033)(010)] = [(043)(000)] + ABy * [(033)(000)]
    a6b1[74] = a7b0[32] + z * a6b0[24];    //[(033)(001)] = [(034)(000)] + ABz * [(033)(000)]
    a6b1[75] = a7b0[25] + x * a6b0[25];    //[(024)(100)] = [(124)(000)] + ABx * [(024)(000)]
    a6b1[76] = a7b0[32] + y * a6b0[25];    //[(024)(010)] = [(034)(000)] + ABy * [(024)(000)]
    a6b1[77] = a7b0[33] + z * a6b0[25];    //[(024)(001)] = [(025)(000)] + ABz * [(024)(000)]
    a6b1[78] = a7b0[26] + x * a6b0[26];    //[(015)(100)] = [(115)(000)] + ABx * [(015)(000)]
    a6b1[79] = a7b0[33] + y * a6b0[26];    //[(015)(010)] = [(025)(000)] + ABy * [(015)(000)]
    a6b1[80] = a7b0[34] + z * a6b0[26];    //[(015)(001)] = [(016)(000)] + ABz * [(015)(000)]
    a6b1[81] = a7b0[27] + x * a6b0[27];    //[(006)(100)] = [(106)(000)] + ABx * [(006)(000)]
    a6b1[82] = a7b0[34] + y * a6b0[27];    //[(006)(010)] = [(016)(000)] + ABy * [(006)(000)]
    a6b1[83] = a7b0[35] + z * a6b0[27];    //[(006)(001)] = [(007)(000)] + ABz * [(006)(000)]
}

} // namespace (hgp)
} // namespace (nhfInt)
